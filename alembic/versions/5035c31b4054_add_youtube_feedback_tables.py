"""Add youtube feedback tables

Revision ID: 5035c31b4054
Revises: 74975b24cf4e
Create Date: 2025-05-05 17:37:12.827276

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5035c31b4054'
down_revision: Union[str, None] = '74975b24cf4e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('influencers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('games',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('steam_app_id', sa.Integer(), nullable=True),
    sa.Column('slack_channel_id', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['steam_app_id'], ['tracked_apps.app_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('steam_app_id')
    )
    op.create_index(op.f('ix_games_is_active'), 'games', ['is_active'], unique=False)
    op.create_table('youtube_channels',
    sa.Column('id', sa.String(length=50), nullable=False),
    sa.Column('influencer_id', sa.Integer(), nullable=False),
    sa.Column('channel_name', sa.String(length=255), nullable=True),
    sa.Column('handle', sa.String(length=100), nullable=True),
    sa.Column('last_checked_timestamp', sa.BigInteger(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['influencer_id'], ['influencers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('handle')
    )
    op.create_index(op.f('ix_youtube_channels_last_checked_timestamp'), 'youtube_channels', ['last_checked_timestamp'], unique=False)
    op.create_table('game_influencer_mappings',
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.Column('influencer_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.ForeignKeyConstraint(['influencer_id'], ['influencers.id'], ),
    sa.PrimaryKeyConstraint('game_id', 'influencer_id')
    )
    op.create_index(op.f('ix_game_influencer_mappings_is_active'), 'game_influencer_mappings', ['is_active'], unique=False)
    op.create_table('youtube_videos',
    sa.Column('id', sa.String(length=20), nullable=False),
    sa.Column('channel_id', sa.String(length=50), nullable=False),
    sa.Column('title', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('upload_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('transcript_status', sa.String(length=20), nullable=True),
    sa.Column('analysis_status', sa.String(length=20), nullable=True),
    sa.Column('fetched_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['channel_id'], ['youtube_channels.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_youtube_videos_analysis_status'), 'youtube_videos', ['analysis_status'], unique=False)
    op.create_index(op.f('ix_youtube_videos_channel_id'), 'youtube_videos', ['channel_id'], unique=False)
    op.create_index(op.f('ix_youtube_videos_transcript_status'), 'youtube_videos', ['transcript_status'], unique=False)
    op.create_index(op.f('ix_youtube_videos_upload_date'), 'youtube_videos', ['upload_date'], unique=False)
    op.create_table('video_feedback_analysis',
    sa.Column('video_id', sa.String(length=20), nullable=False),
    sa.Column('llm_analysis_model', sa.String(length=50), nullable=True),
    sa.Column('llm_analysis_timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('is_relevant', sa.Boolean(), nullable=True),
    sa.Column('analyzed_sentiment', sa.String(length=20), nullable=True),
    sa.Column('positive_themes', postgresql.ARRAY(sa.TEXT()), nullable=True),
    sa.Column('negative_themes', postgresql.ARRAY(sa.TEXT()), nullable=True),
    sa.Column('bug_reports', postgresql.ARRAY(sa.TEXT()), nullable=True),
    sa.Column('feature_requests', postgresql.ARRAY(sa.TEXT()), nullable=True),
    sa.Column('balance_feedback', postgresql.ARRAY(sa.TEXT()), nullable=True),
    sa.Column('gameplay_loop_feedback', postgresql.ARRAY(sa.TEXT()), nullable=True),
    sa.Column('monetization_feedback', postgresql.ARRAY(sa.TEXT()), nullable=True),
    sa.ForeignKeyConstraint(['video_id'], ['youtube_videos.id'], ),
    sa.PrimaryKeyConstraint('video_id')
    )
    op.create_table('video_transcripts',
    sa.Column('video_id', sa.String(length=20), nullable=False),
    sa.Column('language', sa.String(length=10), nullable=False),
    sa.Column('transcript_text', sa.Text(), nullable=True),
    sa.Column('fetched_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['video_id'], ['youtube_videos.id'], ),
    sa.PrimaryKeyConstraint('video_id', 'language')
    )
    op.add_column('tracked_apps', sa.Column('last_processed_timestamp', sa.BigInteger(), nullable=True))
    op.add_column('tracked_apps', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('tracked_apps', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('tracked_apps', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.create_index(op.f('ix_tracked_apps_is_active'), 'tracked_apps', ['is_active'], unique=False)
    op.create_index(op.f('ix_tracked_apps_last_fetched_timestamp'), 'tracked_apps', ['last_fetched_timestamp'], unique=False)
    op.create_index(op.f('ix_tracked_apps_last_processed_timestamp'), 'tracked_apps', ['last_processed_timestamp'], unique=False)
    op.drop_column('tracked_apps', 'added_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tracked_apps', sa.Column('added_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_tracked_apps_last_processed_timestamp'), table_name='tracked_apps')
    op.drop_index(op.f('ix_tracked_apps_last_fetched_timestamp'), table_name='tracked_apps')
    op.drop_index(op.f('ix_tracked_apps_is_active'), table_name='tracked_apps')
    op.alter_column('tracked_apps', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_column('tracked_apps', 'updated_at')
    op.drop_column('tracked_apps', 'created_at')
    op.drop_column('tracked_apps', 'last_processed_timestamp')
    op.drop_table('video_transcripts')
    op.drop_table('video_feedback_analysis')
    op.drop_index(op.f('ix_youtube_videos_upload_date'), table_name='youtube_videos')
    op.drop_index(op.f('ix_youtube_videos_transcript_status'), table_name='youtube_videos')
    op.drop_index(op.f('ix_youtube_videos_channel_id'), table_name='youtube_videos')
    op.drop_index(op.f('ix_youtube_videos_analysis_status'), table_name='youtube_videos')
    op.drop_table('youtube_videos')
    op.drop_index(op.f('ix_game_influencer_mappings_is_active'), table_name='game_influencer_mappings')
    op.drop_table('game_influencer_mappings')
    op.drop_index(op.f('ix_youtube_channels_last_checked_timestamp'), table_name='youtube_channels')
    op.drop_table('youtube_channels')
    op.drop_index(op.f('ix_games_is_active'), table_name='games')
    op.drop_table('games')
    op.drop_table('influencers')
    # ### end Alembic commands ###
